plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jacoco {
    toolVersion = "0.8.12"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // mysql
    runtimeOnly 'com.mysql:mysql-connector-j'

    // atomikos
    implementation 'com.atomikos:transactions-spring-boot3-starter:6.0.0'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacocoTestReport {
    dependsOn test

    reports {
        html.required = true
        html.destination file("$buildDir/jacoco/report.html")
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect{
                    fileTree(dir: it, excludes: [
                            "**/*Application*",
                            "**/*Config*",
<<<<<<< HEAD
                            "**/Request/**",
                            "**/Response/**"
=======
                            "**/*Dto*"
>>>>>>> 6b48677 ([#3] feat: TestCoverage 측정을 위한 JaCoCo)
                    ])
                })
        )
    }

    finalizedBy jacocoTestCoverageVerification
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
<<<<<<< HEAD
                minimum = 0.6
=======
                minimun = 0.6
>>>>>>> 6b48677 ([#3] feat: TestCoverage 측정을 위한 JaCoCo)
            }

            excludes = [
                    "**.*Application*",
                    "**.*Config*",
<<<<<<< HEAD
                    "**.Request.*",
                    "**.Response.*"
=======
                    "**.*Dto*"
>>>>>>> 6b48677 ([#3] feat: TestCoverage 측정을 위한 JaCoCo)
            ]
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
